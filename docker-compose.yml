version: '3.1'

services:

  data-access-api:
    build:
      network: host
      context: .
      dockerfile: deployment/go-services/Dockerfile
      args:
        SERVICE_NAME: "data-access-api"
    image: cc/data-access-api
    tty: true
    container_name: data-access-api
    ports:
      - 8085:8080
    env_file:
      - data-access-api/.env
    volumes:
      # to rebuild the app with air
      - ./data-access-api:/go/data-access-api:delegated
    networks:
      - api-network
      - external
  mongo0:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - /tmp/storage-system/db0:/data/db:rw
      - ./deployment/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - node0-network

  node0:
    build:
      network: host
      context: .
      dockerfile: deployment/go-services/Dockerfile
      args:
        SERVICE_NAME: "node"
    image: cc/node
    tty: true
    depends_on:
      - mongo0
    container_name: node0
    env_file:
      - node/.env
    volumes:
      # to rebuild the app with air
      - ./node:/go/node:delegated
    networks:
      - node0-network
      - api-network


  mongo1:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - /tmp/storage-system/db1:/data/db:rw
      - ./deployment/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - node1-network

  node1:
    build:
      network: host
      context: .
      dockerfile: deployment/go-services/Dockerfile
      args:
        SERVICE_NAME: "node"
    image: cc/node
    tty: true
    depends_on:
      - mongo1
    container_name: node1
    env_file:
      - node/.env
    volumes:
      # to rebuild the app with air
      - ./node:/go/node:delegated
    networks:
      - node1-network
      - api-network


  mongo2:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - /tmp/storage-system/db2:/data/db:rw
      - ./deployment/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - node2-network

  node2:
    build:
      network: host
      context: .
      dockerfile: deployment/go-services/Dockerfile
      args:
        SERVICE_NAME: "node"
    image: cc/node
    tty: true
    depends_on:
      - mongo2
    container_name: node2
    env_file:
      - node/.env
    volumes:
      # to rebuild the app with air
      - ./node:/go/node:delegated
    networks:
      - node2-network
      - api-network




networks:
  external:
  api-network:
  node0-network:
  node1-network:
  node2-network:
